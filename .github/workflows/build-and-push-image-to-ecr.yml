name: Push image to Container Registry

on:
  workflow_call:
    inputs:
      image_ref:
        required: true
        type: string
      # ecr_repository:
      #   required: true
      #   type: string
    outputs:
      image_tag:
        description: "The built docker image"
        value: ${{ jobs.push_image_to_registry.outputs.image_tag }}
      ecr_repository:
        value: ${{ jobs.push_image_to_registry.outputs.ecr_repository }}
    secrets:
      access_key_id:
        required: true
      secret_access_key:
        required: true
      aws_region:
        required: true
      ecr_repo:
        required: true

jobs:
  push_image_to_registry:
    name: Push_Image
    runs-on: ubuntu-latest # Using a linux runner
    outputs:
      image_tag: ${{ steps.build_image.outputs.image_tag }}
      ecr_repository: ${{ env.ECR_REPOSITORY }}

    # Setting environment variables
    env:
      ECR_REPOSITORY: ${{ secrets.ecr_repo }}
      IMAGE_TAG: ${{ inputs.image_ref }}

    steps:

    # Checks out the current repository
    - name: Check out code
      uses: actions/checkout@v2

    # Allows use of some extra context env vars e.g., $CI_SHA_SHORT
    - name: set-env-vars
      uses: FranzDiebold/github-env-vars-action@v2

    # Confuguring AWS on the runner
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.access_key_id }}
        aws-secret-access-key: ${{ secrets.secret_access_key }}
        aws-region: ${{ secrets.aws_region }}

    # Logs into ECR, and fetches the container registries
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build and tag images
    - name: Build, tag, and push image to Amazon ECR
      id: build_image
      env:
        # Container resgistries are gotten from the previous step
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$CI_SHA_SHORT .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$CI_SHA_SHORT
        echo "::set-output name=image_tag::$IMAGE_TAG-$CI_SHA_SHORT"
        echo "::set-output name=ecr_repository::$ECR_REPOSITORY"
