name: Push image to Container Registry

on:
  workflow_call:
    inputs:
      role_arn:
        required: true
        type: string
      runs_on:
        required: false
        type: string
        default: 'self-hosted'
    secrets:
      aws_region:
        required: true
      ecr_repo:
        required: true
      gh_pkg_token:
        required: true
      checkout_dir:
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  push_image_to_registry:
    name: PushImage
    runs-on: ${{ inputs.runs_on }}

    env:
      ECR_REPOSITORY: ${{ secrets.ecr_repo }}

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        sparse-checkout: |
          ${{ secrets.checkout_dir }}

    - name: set-env-vars
      uses: FranzDiebold/github-env-vars-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.role_arn }}
        aws-region: ${{ secrets.aws_region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Check if image tag exists
      id: check-tag
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        IMAGE_TAG=$(echo "${{ github.ref_name }}" | sed 's/[^a-zA-Z0-9]/-/g')
        FULL_TAG="${IMAGE_TAG}-${CI_SHA_SHORT}"
        echo "FULL_TAG=${FULL_TAG}" >> $GITHUB_ENV

        if aws ecr describe-images --repository-name $ECR_REPOSITORY --image-ids imageTag=$FULL_TAG --region ${{ secrets.aws_region }} > /dev/null 2>&1; then
          echo "Tag exists. Skipping build and push."
          echo "tag_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Tag does not exist. Proceeding with build and push."
          echo "tag_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Build, tag, and push image to Amazon ECR
      if: steps.check-tag.outputs.tag_exists == 'false'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$FULL_TAG --build-arg GH_PKG_TOKEN=${{ secrets.gh_pkg_token }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$FULL_TAG