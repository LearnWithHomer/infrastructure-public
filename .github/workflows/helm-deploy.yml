# .github/workflows/deploy.yml
name: Helm Deploy

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: 'self-hosted' 
      release:
        required: true
        type: string
      chart:
        required: true
        type: string
      namespace:
        required: false
        type: string
        default: 'default' 
      value-file:
        required: true
        type: string
      add-repo:
        required: false
        type: string 
      extra-args:
        required: false
        type: string
    secrets:
      kubeconfig:
        required: true
      args_secret_1:
        required: false
      args_secret_2:
        required: false

jobs:
  deploy_to_k8s:
    name: Deploy
    runs-on: ${{ inputs.runs_on }}

    steps:
    # Set kubeconfig context for cluster
    - name: Set Kubeconfig
      uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.kubeconfig }}

    # Helm is required to generate the manifests
    - name: Install Helm
      run: |
        wget https://get.helm.sh/helm-v3.11.0-linux-amd64.tar.gz
        tar xvf helm-v3.11.0-linux-amd64.tar.gz
        sudo mv linux-amd64/helm /usr/local/bin
        echo "Installed helm"

    - uses: azure/setup-kubectl@v3
      id: install-k8s

    - name: Check out code
      uses: actions/checkout@v3

    - name: Add Repo
      continue-on-error: true
      run: |
        ${{ inputs.add-repo }}

    - name: Install
      id: install
      continue-on-error: true
      env:
        ARGS_SECRET_1: ${{secrets.args_secret_1}}
        ARGS_SECRET_2: ${{secrets.args_secret_2}}
      run: |
        helm install ${{ inputs.release }} -f ${{ inputs.value-file }} ${{ inputs.chart }} --namespace ${{ inputs.namespace }} ${{inputs.extra-args}} --wait

    - name: Upgrade
      env:
        ARGS_SECRET_1: ${{secrets.args_secret_1}}
        ARGS_SECRET_2: ${{secrets.args_secret_2}}
      run: |
        helm upgrade ${{ inputs.release }} -f ${{ inputs.value-file }} ${{ inputs.chart }} --namespace ${{ inputs.namespace }} ${{inputs.extra-args}} --wait