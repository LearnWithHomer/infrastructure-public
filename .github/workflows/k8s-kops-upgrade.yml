name: Kops K8s Cluster Scheduled Upgrade with Kops

on:
  workflow_call:
    inputs:
      aws_account_id:
        required: true
        type: string
      role_name:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: "us-east-1"
      cluster_name:
        required: true
        type: string
      cluster_domain:
        required: true
        type: string
      kops_state_bucket:
        required: true
        type: string
      kops_discovery_store:
        required: true
        type: string
      vpc_id:
        required: true
        type: string
      vpc_cidr:
        required: false
        type: string
        default: "172.200.0.0/16"
    outputs:
      new_version_check:
        description: 'The result of the Kubernetes version check'
        value: ${{ jobs.check-upgrade-k8s.outputs.new_version_check }}
      updated_version:
        description: 'The updated Kubernetes version, if an upgrade was performed'
        value: ${{ jobs.check-upgrade-k8s.outputs.updated_version }}
    secrets:
      SSL_CERT_ARN:
        required: true
      SSL_CERT_ARN_INTERNAL:
        required: false
      ENCODED_KUBECONFIG:
        required: true

jobs:
  check-upgrade-k8s:
    uses: LearnWithHomer/infrastructure-public/.github/workflows/kops-cli.yml@workflows/kops
    with:
      aws_account_id: ${{ inputs.aws_account_id }}
      role_name: ${{ inputs.role_name }}
      aws_region: ${{ inputs.aws_region }}
      cluster_name: ${{ inputs.cluster_name }}
      cluster_domain: ${{ inputs.cluster_domain }}
      kops_state_bucket: ${{ inputs.kops_state_bucket }}
      kops_discovery_store: ${{ inputs.kops_discovery_store }}
      vpc_id: ${{ inputs.vpc_id }}
      vpc_cidr: ${{ inputs.vpc_cidr }}
      kops-commands: |
        # Check for Kubernetes
        if kops upgrade cluster --name "${{ inputs.cluster_name }}" | grep -q "No upgrade required"; then
          echo "new_version_check=${{ inputs.cluster_name }} is on the latest Kubernetes version" >> $GITHUB_OUTPUT
        else
          kops upgrade cluster --name "${{ inputs.cluster_name }}" --yes

          kops rolling-update cluster --name "${{ inputs.cluster_name }}" --yes

          updated_version=$(kops get cluster --name "${{ inputs.cluster_name }}" -o yaml | yq -r '.spec.kubernetesVersion')

          echo "updated_version=${updated_version}" >> $GITHUB_OUTPUT
          echo "new_version_check=Upgraded ${{ inputs.cluster_name }} to ${updated_version}" >> $GITHUB_OUTPUT
        fi
    secrets:
      SSL_CERT_ARN: ${{ secrets.SSL_CERT_ARN }}
      SSL_CERT_ARN_INTERNAL: ${{ secrets.SSL_CERT_ARN_INTERNAL }}
      ENCODED_KUBECONFIG: ${{ secrets.ENCODED_KUBECONFIG }}