name: K8s InstanceGroups Scheduled Scaling with Kops

on:
  workflow_call:
    inputs:
      cron-up:
        required: false
        type: string
        default: '0 20 * * 1-5'
      cron-down:
        required: false
        type: string
        default: '0 6 * * 1-5'
      aws_account_id:
        required: true
        type: string
      role_name:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: "us-east-1"
      cluster_name:
        required: true
        type: string
      cluster_domain:
        required: true
        type: string
      kops_state_bucket:
        required: true
        type: string
      kops_discovery_store:
        required: true
        type: string
      vpc_id:
        required: true
        type: string
      vpc_cidr:
        required: false
        type: string
        default: "172.200.0.0/16"
      action:
        required: false
        type: string
        default: ''
        description: 'Action to perform (scale-up or scale-down). If not provided, it will be determined based on the cron schedule.'
    secrets:
      SSL_CERT_ARN:
        required: true
      SSL_CERT_ARN_INTERNAL:
        required: true
      KUBECONFIG:
        required: true
      # ARTIFACTS_GITHUB_TOKEN:
      #   required: true

jobs:
  determine-action:
    runs-on: self-hosted
    outputs:
      action: ${{ steps.set-action.outputs.action }}
    steps:
      - id: set-action
        run: |
          if [ "${{ inputs.action }}" != "" ]; then
            echo "action=${{ inputs.action }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.schedule }}" == "${{ inputs.cron-down }}" ]; then
            echo "action=scale-down" >> $GITHUB_OUTPUT
          else
            echo "action=scale-up" >> $GITHUB_OUTPUT
          fi

  scale-down:
    needs: determine-action
    if: needs.determine-action.outputs.action == 'scale-down'
    uses: LearnWithHomer/infrastructure-public/.github/workflows/kops-cli.yml@workflows/kops
    with:
      aws_account_id: ${{ inputs.aws_account_id }}
      role_name: ${{ inputs.role_name }}
      aws_region: ${{ inputs.aws_region }}
      cluster_name: ${{ inputs.cluster_name }}
      cluster_domain: ${{ inputs.cluster_domain }}
      kops_state_bucket: ${{ inputs.kops_state_bucket }}
      kops_discovery_store: ${{ inputs.kops_discovery_store }}
      vpc_id: ${{ inputs.vpc_id }}
      vpc_cidr: ${{ inputs.vpc_cidr }}
      kops-commands: |
        # Get current instance group configuration
        kops get instancegroups -o yaml > ig-config-original.yaml
        
        # Process Node instance groups
        yq e 'select(.spec.role == "Node").spec.minSize = 0 | select(.spec.role == "Node").spec.maxSize = 1 | select(.spec.role == "Node").spec.machineType = "t2.micro"' ig-config-original.yaml > ig-config-modified.yaml

        # Apply changes
        kops replace -f ig-config-modified.yaml
        kops update cluster --yes
    secrets:
      SSL_CERT_ARN: ${{ secrets.SSL_CERT_ARN }}
      SSL_CERT_ARN_INTERNAL: ${{ secrets.SSL_CERT_ARN_INTERNAL }}
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
  
  upload-artifacts:
    needs: scale-down
    if: needs.determine-action.outputs.action == 'scale-down'
    runs-on: self-hosted
    steps:
      - name: Upload configuration files
        uses: actions/upload-artifact@v4
        with:
          name: ig-configs
          path: ${{ github.workspace }}
          retention-days: 1
        # env:
        #   GITHUB_TOKEN: ${{ secrets.ARTIFACTS_GITHUB_TOKEN }}

  prepare-scale-up:
    needs: determine-action
    if: needs.determine-action.outputs.action == 'scale-up'
    runs-on: self-hosted
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ig-configs
          path: ${{ github.workspace }}
        # env:
        #   GITHUB_TOKEN: ${{ secrets.ARTIFACTS_GITHUB_TOKEN }}
      
      - name: Prepare kops commands
        id: prepare-commands
        run: |
          echo 'kops-commands<<EOF' >> $GITHUB_OUTPUT
          echo '# Apply original configuration' >> $GITHUB_OUTPUT
          echo 'kops replace -f ${{ github.workspace }}/ig-config-original.yaml' >> $GITHUB_OUTPUT
          echo 'kops update cluster --yes' >> $GITHUB_OUTPUT
          echo '' >> $GITHUB_OUTPUT
          echo '# Wait for cluster to stabilize' >> $GITHUB_OUTPUT
          echo 'kops validate cluster --wait 10m' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
  
  scale-up:
    needs: [determine-action, prepare-scale-up]
    if: needs.determine-action.outputs.action == 'scale-up'
    uses: LearnWithHomer/infrastructure-public/.github/workflows/kops-cli.yml@workflows/kops
    with:
      aws_account_id: ${{ inputs.aws_account_id }}
      role_name: ${{ inputs.role_name }}
      aws_region: ${{ inputs.aws_region }}
      cluster_name: ${{ inputs.cluster_name }}
      cluster_domain: ${{ inputs.cluster_domain }}
      kops_state_bucket: ${{ inputs.kops_state_bucket }}
      kops_discovery_store: ${{ inputs.kops_discovery_store }}
      vpc_id: ${{ inputs.vpc_id }}
      vpc_cidr: ${{ inputs.vpc_cidr }}
      kops-commands: ${{ needs.scale-up.outputs.kops-commands }}
    secrets:
      SSL_CERT_ARN: ${{ secrets.SSL_CERT_ARN }}
      SSL_CERT_ARN_INTERNAL: ${{ secrets.SSL_CERT_ARN_INTERNAL }}
      KUBECONFIG: ${{ secrets.KUBECONFIG }}