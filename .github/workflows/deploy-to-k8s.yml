name: Deploy to k8s

on:
  workflow_call:
    inputs:
      app_env:
        required: true
        type: string
      rel_helm_path:
        required: true
        type: string
    secrets:
      kubeconfig:
        required: true
      ecr_repo:
        required: true

jobs:
  deploy_to_k8s:
    name: Deploy
    runs-on: ubuntu-latest # Using a linux runner

    # Setting environment variables
    env:
      ECR_REPOSITORY: ${{ secrets.ecr_repo }}
      IMAGE_TAG: ${{ github.ref_name }}
      HELM_PATH: ${{ github.workspace }}/${{ inputs.rel_helm_path }}
      APP_ENV: ${{ inputs.app_env }}

    steps:

    # Set kubeconfig context for Staging cluster
    - name: Set Kubeconfig
      uses: azure/k8s-set-context@v2
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.kubeconfig }}

    # Helm is required to generate the manifests
    - name: Install Helm
      run: |
        wget https://get.helm.sh/helm-v3.9.1-linux-amd64.tar.gz
        tar xvf helm-v3.9.1-linux-amd64.tar.gz
        sudo mv linux-amd64/helm /usr/local/bin
        echo "Installed helm"

    # Install yq - yaml processor
    - name: Install yq
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq
        yq --version
        echo "Installed yq"

    # Checks out the current repository
    - name: Check out code
      uses: actions/checkout@v2

    # Allows use of some extra context env vars e.g., $CI_SHA_SHORT
    - name: set-env-vars
      uses: FranzDiebold/github-env-vars-action@v2

    # This generates the deployment manifests for specified environment
    - name: Generate manifest for '$APP_ENV'
      run: |
        cd $HELM_PATH
        ls
        export DEPLOY_NAME=$(yq e '.name' ./values.yaml)

        [ $APP_ENV == devopsTest ] && export echo "APP_ENV=dev" >> $GITHUB_ENV
        echo "APP_ENV: $APP_ENV"
        export NAMESPACE=$(yq e '.namespace' ./values-$APP_ENV.yaml)
        export REPLICAS=$(kubectl get deployment $DEPLOY_NAME-$NAMESPACE -n $NAMESPACE -o=jsonpath={.spec.replicas})
        [ -z $REPLICAS ] && export REPLICAS=$(yq e '.replicas' ./values.yaml)

        echo "Number of replicas: $REPLICAS"
        echo "Namespace: $NAMESPACE"
        echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV

        helm template . -f ./values.yaml -f ./values-$NAMESPACE.yaml --set imageTag=$IMAGE_TAG --set replicas=$REPLICAS > ${{ runner.temp }}/manifest.yaml
        ls ${{ runner.temp }}
        echo "Done: Generated manifest!"

    # This deploys to staging/test cluster, for the specified env
    - name: Deploy to '$APP_ENV'
      uses: Azure/k8s-deploy@v4.4
      env:
        # Container resgistries are gotten from a previous step
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      with:
        namespace: ${{ env.NAMESPACE }}
        manifests: |
            ${{ runner.temp }}/manifest.yaml
        images: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-$CI_SHA_SHORT